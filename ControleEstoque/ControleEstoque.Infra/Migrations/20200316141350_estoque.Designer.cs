// <auto-generated />
using System;
using ControleEstoque.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControleEstoque.Infra.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20200316141350_estoque")]
    partial class estoque
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControleEstoque.Domain.Entities.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<string>("Codigo")
                        .IsRequired();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("Loja");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<decimal>("PercentualVenda");

                    b.Property<int>("QuantidadeEmEstoque");

                    b.Property<decimal>("ValorCusto");

                    b.Property<decimal>("ValorVenda");

                    b.HasKey("Id");

                    b.ToTable("Estoque");

                    b.HasData(
                        new
                        {
                            Id = new Guid("83fce0bd-b56c-4e44-a4b1-0c26ea4dfa83"),
                            Ativo = false,
                            Codigo = "UC200",
                            Descricao = "Uma bela faca",
                            Loja = 0,
                            Nome = "Faca",
                            PercentualVenda = 250m,
                            QuantidadeEmEstoque = 50,
                            ValorCusto = 20m,
                            ValorVenda = 50m
                        },
                        new
                        {
                            Id = new Guid("91dd6e13-1a6b-413d-a724-02933a9c23fd"),
                            Ativo = false,
                            Codigo = "UC200",
                            Descricao = "Uma bela faca 2.0",
                            Loja = 1,
                            Nome = "Faca 2.0",
                            PercentualVenda = 250m,
                            QuantidadeEmEstoque = 50,
                            ValorCusto = 20m,
                            ValorVenda = 50m
                        });
                });

            modelBuilder.Entity("ControleEstoque.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ativo");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<int>("NivelAcesso");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0441da01-a2bd-443d-a00f-178e3d7c1120"),
                            Ativo = false,
                            DataCriacao = new DateTime(2020, 3, 16, 11, 13, 50, 431, DateTimeKind.Local).AddTicks(7553),
                            DataNascimento = new DateTime(2001, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fred@gmail.com",
                            NivelAcesso = 0,
                            Nome = "Fred",
                            Senha = "26d6a8ad97c75ffc548f6873e5e93ce475479e3e1a1097381e"
                        },
                        new
                        {
                            Id = new Guid("1d7bd54c-818e-431e-a866-141c91dc6162"),
                            Ativo = false,
                            DataCriacao = new DateTime(2020, 3, 16, 11, 13, 50, 432, DateTimeKind.Local).AddTicks(2702),
                            DataNascimento = new DateTime(2001, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gabriela@gmail.com",
                            NivelAcesso = 1,
                            Nome = "Gabriela",
                            Senha = "26d6a8ad97c75ffc548f6873e5e93ce475479e3e1a1097381e"
                        },
                        new
                        {
                            Id = new Guid("840c7b7a-5a52-4656-8361-9d01abc1f7e6"),
                            Ativo = false,
                            DataCriacao = new DateTime(2020, 3, 16, 11, 13, 50, 432, DateTimeKind.Local).AddTicks(2714),
                            DataNascimento = new DateTime(2001, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ericka@gmail.com",
                            NivelAcesso = 2,
                            Nome = "Ericka",
                            Senha = "26d6a8ad97c75ffc548f6873e5e93ce475479e3e1a1097381e"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
